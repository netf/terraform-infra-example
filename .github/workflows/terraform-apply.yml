name: Apply Terraform

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      region:
        required: True
        type: string
      role_to_assume:
        type: string
        required: true
      tf_version:
        type: string
        required: false
        default: 1.3.1

jobs:
  Apply:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency: ${{ inputs.environment }}
    if: ${{ github.ref == 'refs/heads/main' || github.ref != 'refs/heads/main' && contains(fromJson(inputs.env_deploy_list), inputs.environment) }}
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}

    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v3
      with:
        name: terraform-plan-${{ inputs.environment }}
        path: ${{ inputs.tf_build_path }}

    - name: Configure AWS credentials for account
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ inputs.role_to_assume }}
        aws-region: ${{ inputs.region }}

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.tf_build_path }}
      run: |
        terraform init \
        -backend-config=${{ github.workspace }}/${{ inputs.tf_deploy_path }}/${{ inputs.environment }}/${{ inputs.environment }}.conf


    - name: Terraform apply
      if: ${{ inputs.tf_destroy_all_resources == 'False' }}
      working-directory: ${{ inputs.tf_build_path }}
      run: terraform apply tfplan
      env:
        AWS_REGION: "${{ inputs.region }}"