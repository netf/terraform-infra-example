name: Set Matrix

on:
  workflow_call:
    inputs:
      python_version:
        type: string
        required: false
        default: '3.9'
    outputs:
      matrix:
        value: ${{ jobs.set-matrix.outputs.matrix }}

jobs:
  set-matrix:
    name: Set Environment Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}

    - name: Execute generate_config.py and create matrix
      id: create-matrix
      run: |
        # Run the Python script and capture its output
        python .github/scripts/generate_config.py > script_output.txt
        
        # Extract only the JSON part from the output
        JSON_OUTPUT=$(sed -n '/^{/,/^}$/p' script_output.txt | tr -d '\n')
        
        # Validate JSON output
        if [ -z "$JSON_OUTPUT" ] || ! echo "$JSON_OUTPUT" | jq . >/dev/null 2>&1; then
          echo "Error: Invalid or empty JSON output"
          cat script_output.txt
          exit 1
        fi
        
        # Create the matrix JSON
        MATRIX_JSON=$(echo "$JSON_OUTPUT" | jq -c '{ include: [ to_entries[] | {path: .key} + .value ] }')
        
        # Set the matrix output
        echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
        
        # Debug output
        echo "Generated matrix:"
        echo "$MATRIX_JSON" | jq .

    - name: Debug info
      run: |
        echo "Git status:"
        git status
        echo "Git log:"
        git log --oneline -n 5
        echo "Directory structure:"
        tree -L 4 workloads